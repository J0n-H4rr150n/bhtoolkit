[
  {
    "category": "XSS", 
    "description": "Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src=\"javascript:alert(`xss`)\"&gt;</code> without using the frontend application at all.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "You need to work with the server-side API directly. Try different HTTP verbs on different entities exposed through the API.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 3, 
    "key": "restfulXssChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_perform_a_persisted_xss_attack_without_using_the_frontend_application_at_all", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "name": "API-only XSS"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "name": "Access Log", 
    "hint": "Who would want a server access log to be accessible through a web application?", 
    "difficulty": 4, 
    "key": "accessLogDisclosureChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_gain_access_to_any_access_log_file_of_the_server", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html", 
    "description": "Gain access to any access log file of the server."
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Admin Registration", 
    "hint": "You have to assign the unassignable.", 
    "difficulty": 3, 
    "key": "registerAdminChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_register_as_a_user_with_administrator_privileges", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Mass_Assignment_Cheat_Sheet.html", 
    "description": "Register as a user with administrator privileges."
  }, 
  {
    "category": "Broken Access Control", 
    "description": "Access the administration section of the store.", 
    "hint": "It is just slightly harder to find than the score board link.", 
    "tags": [
      "Good for Demos"
    ], 
    "difficulty": 2, 
    "key": "adminSectionChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_access_the_administration_section_of_the_store", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html", 
    "tutorial": {
      "order": 8
    }, 
    "name": "Admin Section"
  }, 
  {
    "category": "Vulnerable Components", 
    "description": "Overwrite the <a href=\"/ftp/legal.md\">Legal Information</a> file.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "Look out for a tweet praising new functionality of the web shop. Then find a third party vulnerability associated with it.", 
    "tags": [
      "Danger Zone", 
      "Prerequisite"
    ], 
    "difficulty": 6, 
    "key": "fileWriteChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_overwrite_the_legal_information_file", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerable_Dependency_Management_Cheat_Sheet.html", 
    "name": "Arbitrary File Write"
  }, 
  {
    "category": "Broken Authentication", 
    "description": "Reset the password of Bjoern's OWASP account via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism with <i>the original answer</i> to his security question.", 
    "hint": "He might have trumpeted it on at least one occasion where a camera was running. Maybe elsewhere as well.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 3, 
    "key": "resetPasswordBjoernOwaspChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_reset_the_password_of_bjoerns_owasp_account_via_the_forgot_password_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Bjoern's Favorite Pet"
  }, 
  {
    "category": "Security through Obscurity", 
    "description": "Learn about the Token Sale before its official announcement.", 
    "hint": "The developers truly believe in \"Security through Obscurity\" over actual access restrictions.", 
    "tags": [
      "Contraption", 
      "Code Analysis", 
      "Web3"
    ], 
    "difficulty": 5, 
    "key": "tokenSaleChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-through-obscurity.html#_learn_about_the_token_sale_before_its_official_announcement", 
    "mitigationUrl": null, 
    "name": "Blockchain Hype"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Take over the wallet containing our official Soul Bound Token (NFT).", 
    "hint": "Find the seed phrase posted accidentally.", 
    "tags": [
      "Contraption", 
      "Good for Demos", 
      "Web3"
    ], 
    "difficulty": 2, 
    "key": "nftUnlockChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_take_over_the_wallet_containing_our_official_soul_bound_token", 
    "mitigationUrl": null, 
    "name": "NFT Takeover"
  }, 
  {
    "category": "Improper Input Validation", 
    "description": "Mint the Honey Pot NFT by gathering BEEs from the bee haven.", 
    "hint": "Discover NFT wonders among the captivating visual memories.", 
    "tags": [
      "Web3", 
      "Internet Traffic"
    ], 
    "difficulty": 3, 
    "key": "nftMintChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_mint_the_honey_pot_nft_by_gathering_bees_from_the_bee_haven", 
    "mitigationUrl": null, 
    "name": "Mint the Honey Pot"
  }, 
  {
    "category": "Miscellaneous", 
    "description": "Withdraw more ETH from the new wallet than you deposited.", 
    "hint": "Try to exploit the contract of the wallet.", 
    "tags": [
      "Web3", 
      "Internet Traffic"
    ], 
    "difficulty": 6, 
    "key": "web3WalletChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/miscellaneous.html#_withdraw_more_eth_from_the_new_wallet_than_you_deposited", 
    "mitigationUrl": null, 
    "name": "Wallet Depletion"
  }, 
  {
    "category": "Broken Access Control", 
    "description": "Find an accidentally deployed code sandbox for writing smart contracts on the fly.", 
    "hint": "It is just as easy as finding the Score Board.", 
    "tags": [
      "Web3"
    ], 
    "difficulty": 1, 
    "key": "web3SandboxChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_find_an_accidentally_deployed_code_sandbox", 
    "mitigationUrl": null, 
    "name": "Web3 Sandbox"
  }, 
  {
    "category": "Insecure Deserialization", 
    "description": "Perform a Remote Code Execution that would keep a less hardened application busy <em>forever</em>.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "The feature you need to exploit for this challenge is not directly advertised anywhere.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 5, 
    "key": "rceChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/insecure-deserialization.html#_perform_a_remote_code_execution_that_would_keep_a_less_hardened_application_busy_forever", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Denial_of_Service_Cheat_Sheet.html", 
    "name": "Blocked RCE DoS"
  }, 
  {
    "category": "Broken Anti Automation", 
    "description": "Submit 10 or more customer feedbacks within 20 seconds.", 
    "hint": "After finding a CAPTCHA bypass, write a script that automates feedback submission. Or open many browser tabs and be really quick.", 
    "tags": [
      "Brute Force"
    ], 
    "difficulty": 3, 
    "key": "captchaBypassChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-anti-automation.html#_submit_10_or_more_customer_feedbacks_within_20_seconds", 
    "mitigationUrl": null, 
    "name": "CAPTCHA Bypass"
  }, 
  {
    "category": "Broken Authentication", 
    "name": "Change Bender's Password", 
    "hint": "In previous releases this challenge was wrongly accused of being based on CSRF.", 
    "difficulty": 5, 
    "key": "changePasswordBenderChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_change_benders_password_into_slurmcl4ssic_without_using_sql_injection_or_forgot_password", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html", 
    "description": "Change Bender's password into <i>slurmCl4ssic</i> without using SQL Injection or Forgot Password."
  }, 
  {
    "category": "Injection", 
    "name": "Christmas Special", 
    "hint": "Find out how the application handles unavailable products and try to find a loophole.", 
    "difficulty": 4, 
    "key": "christmasSpecialChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_order_the_christmas_special_offer_of_2014", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "description": "Order the Christmas special offer of 2014."
  }, 
  {
    "category": "XSS", 
    "description": "Bypass the Content Security Policy and perform an XSS attack with <code>&lt;script&gt;alert(`xss`)&lt;/script&gt;</code> on a legacy page within the application.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "What is even \"better\" than a legacy page with a homegrown RegEx sanitizer? Having CSP injection issues on the exact same page as well!", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 4, 
    "key": "usernameXssChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_bypass_the_content_security_policy_and_perform_an_xss_attack_on_a_legacy_page", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "name": "CSP Bypass"
  }, 
  {
    "category": "XSS", 
    "description": "Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src=\"javascript:alert(`xss`)\"&gt;</code> bypassing a <i>client-side</i> security mechanism.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "Only some input fields validate their input. Even less of these are persisted in a way where their content is shown on another screen.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 3, 
    "key": "persistedXssUserChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_perform_a_persisted_xss_attack_bypassing_a_client_side_security_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "name": "Client-side XSS Protection"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Access a confidential document.", 
    "hint": "Analyze and tamper with links in the application that deliver a file directly.", 
    "tags": [
      "Good for Demos"
    ], 
    "difficulty": 1, 
    "key": "directoryListingChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_access_a_confidential_document", 
    "mitigationUrl": null, 
    "name": "Confidential Document"
  }, 
  {
    "category": "XSS", 
    "description": "Perform a <i>DOM</i> XSS attack with <code>&lt;iframe src=\"javascript:alert(`xss`)\"&gt;</code>.", 
    "hint": "Look for an input field where its content appears in the HTML when its form is submitted.", 
    "tags": [
      "Tutorial", 
      "Good for Demos"
    ], 
    "difficulty": 1, 
    "key": "localXssChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_perform_a_dom_xss_attack", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html", 
    "tutorial": {
      "order": 2
    }, 
    "name": "DOM XSS"
  }, 
  {
    "category": "Injection", 
    "name": "Database Schema", 
    "hint": "Find out where this information could come from. Then craft a UNION SELECT attack string against an endpoint that offers an unnecessary way to filter data.", 
    "difficulty": 3, 
    "key": "dbSchemaChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_exfiltrate_the_entire_db_schema_definition_via_sql_injection", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "description": "Exfiltrate the entire DB schema definition via SQL Injection."
  }, 
  {
    "category": "Security Misconfiguration", 
    "description": "Use a deprecated B2B interface that was not properly shut down.", 
    "hint": "The developers who disabled the interface think they could go invisible by just closing their eyes.", 
    "tags": [
      "Contraption", 
      "Prerequisite"
    ], 
    "difficulty": 2, 
    "key": "deprecatedInterfaceChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-misconfiguration.html#_use_a_deprecated_b2b_interface_that_was_not_properly_shut_down", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Web_Service_Security_Cheat_Sheet.html", 
    "name": "Deprecated Interface"
  }, 
  {
    "category": "Broken Access Control", 
    "description": "Find the hidden <a href=\"https://en.wikipedia.org/wiki/Easter_egg_(media)\" target=\"_blank\">easter egg</a>.", 
    "hint": "If you solved one of the three file access challenges, you already know where to find the easter egg.", 
    "tags": [
      "Shenanigans", 
      "Contraption", 
      "Good for Demos"
    ], 
    "difficulty": 4, 
    "key": "easterEggLevelOneChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_find_the_hidden_easter_egg", 
    "mitigationUrl": null, 
    "name": "Easter Egg"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "name": "Email Leak", 
    "hint": "Try to find and attack an endpoint that responds with user information. SQL Injection is not the solution here.", 
    "difficulty": 5, 
    "key": "emailLeakChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_perform_an_unwanted_information_disclosure_by_accessing_data_cross_domain", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/XS_Leaks_Cheat_Sheet.html", 
    "description": "Perform an unwanted information disclosure by accessing data cross-domain."
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Empty User Registration", 
    "hint": "Consider intercepting and playing with the request payload.", 
    "difficulty": 2, 
    "key": "emptyUserRegistration", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_register_a_user_account_with_an_empty_email_and_password", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html", 
    "description": "Register a user with an empty email and password."
  }, 
  {
    "category": "Injection", 
    "name": "Ephemeral Accountant", 
    "hint": "Try to create the needed user \"out of thin air\".", 
    "difficulty": 4, 
    "key": "ephemeralAccountantChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_log_in_with_the_non_existing_accountant_without_ever_registering_that_user", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "description": "Log in with the (non-existing) accountant <i>acc0unt4nt@juice-sh.op</i> without ever registering that user."
  }, 
  {
    "category": "Security Misconfiguration", 
    "description": "Provoke an error that is neither very gracefully nor consistently handled.", 
    "hint": "Try to submit bad input to forms. Alternatively tamper with URL paths or parameters.", 
    "tags": [
      "Prerequisite"
    ], 
    "difficulty": 1, 
    "key": "errorHandlingChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-misconfiguration.html#_provoke_an_error_that_is_neither_very_gracefully_nor_consistently_handled", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Error_Handling_Cheat_Sheet.html", 
    "name": "Error Handling"
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Expired Coupon", 
    "hint": "Try to identify past special event or holiday campaigns of the shop first.", 
    "difficulty": 4, 
    "key": "manipulateClockChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_successfully_redeem_an_expired_campaign_coupon_code", 
    "mitigationUrl": null, 
    "description": "Successfully redeem an expired campaign coupon code."
  }, 
  {
    "category": "Broken Anti Automation", 
    "description": "Retrieve the language file that never made it into production.", 
    "hint": "Brute force is not the only option for this challenge, but a perfectly viable one.", 
    "tags": [
      "Brute Force"
    ], 
    "difficulty": 5, 
    "key": "extraLanguageChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-anti-automation.html#_retrieve_the_language_file_that_never_made_it_into_production", 
    "mitigationUrl": null, 
    "name": "Extra Language"
  }, 
  {
    "category": "Broken Access Control", 
    "name": "Five-Star Feedback", 
    "hint": "Once you found admin section of the application, this challenge is almost trivial.", 
    "difficulty": 2, 
    "key": "feedbackChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_get_rid_of_all_5_star_customer_feedback", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html", 
    "description": "Get rid of all 5-star customer feedback."
  }, 
  {
    "category": "Cryptographic Issues", 
    "description": "Forge a coupon code that gives you a discount of at least 80%.", 
    "hint": "Try either a) a knowledgeable brute force attack or b) reverse engineering or c) some research in the cloud.", 
    "tags": [
      "Good for Demos", 
      "Code Analysis"
    ], 
    "difficulty": 6, 
    "key": "forgedCouponChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/cryptographic-issues.html#_forge_a_coupon_code_that_gives_you_a_discount_of_at_least_80", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html", 
    "name": "Forged Coupon"
  }, 
  {
    "category": "Broken Access Control", 
    "description": "Post some feedback in another user's name.", 
    "hint": "You can solve this by tampering with the user interface or by intercepting the communication with the RESTful backend.", 
    "tags": [
      "Tutorial"
    ], 
    "difficulty": 3, 
    "key": "forgedFeedbackChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_post_some_feedback_in_another_users_name", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html", 
    "tutorial": {
      "order": 11
    }, 
    "name": "Forged Feedback"
  }, 
  {
    "category": "Broken Access Control", 
    "name": "Forged Review", 
    "hint": "Observe the flow of product review posting and editing and see if you can exploit it.", 
    "difficulty": 3, 
    "key": "forgedReviewChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_post_a_product_review_as_another_user_or_edit_any_users_existing_review", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html", 
    "description": "Post a product review as another user or edit any user's existing review."
  }, 
  {
    "category": "Vulnerable Components", 
    "name": "Forged Signed JWT", 
    "disabledEnv": [
      "Windows"
    ], 
    "hint": "This challenge is explicitly not about acquiring the RSA private key used for JWT signing.", 
    "difficulty": 6, 
    "key": "jwtForgedChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_forge_an_almost_properly_rsa_signed_jwt_token", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_for_Java_Cheat_Sheet.html", 
    "description": "Forge an almost properly RSA-signed JWT token that impersonates the (non-existing) user <i>rsa_lord@juice-sh.op</i>."
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Access a developer's forgotten backup file.", 
    "hint": "You need to trick a security mechanism into thinking that the file you want has a valid file type.", 
    "tags": [
      "Contraption", 
      "Good for Demos", 
      "Prerequisite"
    ], 
    "difficulty": 4, 
    "key": "forgottenDevBackupChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_access_a_developers_forgotten_backup_file", 
    "mitigationUrl": null, 
    "name": "Forgotten Developer Backup"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Access a salesman's forgotten backup file.", 
    "hint": "You need to trick a security mechanism into thinking that the file you want has a valid file type.", 
    "tags": [
      "Contraption"
    ], 
    "difficulty": 4, 
    "key": "forgottenBackupChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_access_a_salesmans_forgotten_backup_file", 
    "mitigationUrl": null, 
    "name": "Forgotten Sales Backup"
  }, 
  {
    "category": "Vulnerable Components", 
    "name": "Frontend Typosquatting", 
    "hint": "This challenge has nothing to do with mistyping web domains. There is no conveniently misplaced file helping you with this one either. Or is there?", 
    "difficulty": 5, 
    "key": "typosquattingAngularChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_inform_the_shop_about_a_typosquatting_imposter_that_dug_itself_deep_into_the_frontend", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerable_Dependency_Management_Cheat_Sheet.html", 
    "description": "<a href=\"/#/contact\">Inform the shop</a> about a <i>typosquatting</i> imposter that dug itself deep into the frontend. (Mention the exact name of the culprit)"
  }, 
  {
    "category": "Broken Authentication", 
    "name": "GDPR Data Erasure", 
    "hint": "Turns out that something is technically and legally wrong with the implementation of the \"right to be forgotten\" for users.", 
    "difficulty": 3, 
    "key": "ghostLoginChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_log_in_with_chris_erased_user_account", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/User_Privacy_Protection_Cheat_Sheet.html", 
    "description": "Log in with Chris' erased user account."
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "name": "GDPR Data Theft", 
    "hint": "Trick the regular Data Export to give you more than actually belongs to you.", 
    "difficulty": 4, 
    "key": "dataExportChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_steal_someone_elses_personal_data_without_using_injection", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/User_Privacy_Protection_Cheat_Sheet.html", 
    "description": "Steal someone else's personal data without using Injection."
  }, 
  {
    "category": "XSS", 
    "description": "Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src=\"javascript:alert(`xss`)\"&gt;</code> through an HTTP header.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "Finding a piece of displayed information that could originate from an HTTP header is part of this challenge.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 4, 
    "key": "httpHeaderXssChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_perform_a_persisted_xss_attack_through_an_http_header", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "name": "HTTP-Header XSS"
  }, 
  {
    "category": "Cryptographic Issues", 
    "description": "Solve challenge #999. Unfortunately, this challenge does not exist.", 
    "hint": "You need to trick the hacking progress persistence feature into thinking you solved challenge #999.", 
    "tags": [
      "Shenanigans", 
      "Code Analysis"
    ], 
    "difficulty": 6, 
    "key": "continueCodeChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/cryptographic-issues.html#_solve_challenge_999", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cryptographic_Storage_Cheat_Sheet.html", 
    "name": "Imaginary Challenge"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Dumpster dive the Internet for a leaked password and log in to the original user account it belongs to. (Creating a new account with the same password does not qualify as a solution.)", 
    "hint": "Once you have it, a technique called \"Password Spraying\" might prove useful.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 5, 
    "key": "dlpPasswordSprayingChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_dumpster_dive_the_internet_for_a_leaked_password_and_log_in_to_the_original_user_account_it_belongs_to", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html", 
    "name": "Leaked Access Logs"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Identify an unsafe product that was removed from the shop and <a href=\"/#/contact\">inform the shop</a> which ingredients are dangerous.", 
    "hint": "Your own SQLi and someone else's Ctrl-V will be your accomplices in this challenge!", 
    "tags": [
      "Shenanigans", 
      "OSINT"
    ], 
    "difficulty": 4, 
    "key": "dlpPastebinDataLeakChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_identify_an_unsafe_product_that_was_removed_from_the_shop_and_inform_the_shop_which_ingredients_are_dangerous", 
    "mitigationUrl": null, 
    "name": "Leaked Unsafe Product"
  }, 
  {
    "category": "Vulnerable Components", 
    "name": "Legacy Typosquatting", 
    "hint": "This challenge has nothing to do with mistyping web domains. Investigate the forgotten developer's backup file instead.", 
    "difficulty": 4, 
    "key": "typosquattingNpmChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_inform_the_shop_about_a_typosquatting_trick_it_has_been_a_victim_of", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerable_Dependency_Management_Cheat_Sheet.html", 
    "description": "<a href=\"/#/contact\">Inform the shop</a> about a <i>typosquatting</i> trick it has been a victim of at least in <code>v6.2.0-SNAPSHOT</code>. (Mention the exact name of the culprit)"
  }, 
  {
    "category": "Injection", 
    "description": "Log in with the administrator's user account.", 
    "hint": "Try different SQL Injection attack patterns depending whether you know the admin's email address or not.", 
    "tags": [
      "Tutorial", 
      "Good for Demos"
    ], 
    "difficulty": 2, 
    "key": "loginAdminChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_log_in_with_the_administrators_user_account", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "tutorial": {
      "order": 7
    }, 
    "name": "Login Admin"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Log in with Amy's original user credentials. (This could take 93.83 billion trillion trillion centuries to brute force, but luckily she did not read the \"One Important Final Note\")", 
    "hint": "This challenge will make you go after a needle in a haystack.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 3, 
    "key": "loginAmyChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_log_in_with_amys_original_user_credentials", 
    "mitigationUrl": null, 
    "name": "Login Amy"
  }, 
  {
    "category": "Injection", 
    "description": "Log in with Bender's user account.", 
    "hint": "If you know Bender's email address, try SQL Injection. Bender's password hash might not help you very much.", 
    "tags": [
      "Tutorial"
    ], 
    "difficulty": 3, 
    "key": "loginBenderChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_log_in_with_benders_user_account", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "tutorial": {
      "order": 13
    }, 
    "name": "Login Bender"
  }, 
  {
    "category": "Broken Authentication", 
    "description": "Log in with Bjoern's Gmail account <i>without</i> previously changing his password, applying SQL Injection, or hacking his Google account.", 
    "hint": "The security flaw behind this challenge is 100% OWASP Juice Shop's fault and 0% Google's.", 
    "tags": [
      "Code Analysis"
    ], 
    "difficulty": 4, 
    "key": "oauthUserPasswordChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_log_in_with_bjoerns_gmail_account", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html", 
    "name": "Login Bjoern"
  }, 
  {
    "category": "Injection", 
    "description": "Log in with Jim's user account.", 
    "hint": "Try cracking Jim's password hash if you harvested it already. Alternatively, if you know Jim's email address, try SQL Injection.", 
    "tags": [
      "Tutorial"
    ], 
    "difficulty": 3, 
    "key": "loginJimChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_log_in_with_jims_user_account", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "tutorial": {
      "order": 12
    }, 
    "name": "Login Jim"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Log in with MC SafeSearch's original user credentials without applying SQL Injection or any other bypass.", 
    "hint": "You should listen to MC's hit song \"Protect Ya Passwordz\".", 
    "tags": [
      "Shenanigans", 
      "OSINT"
    ], 
    "difficulty": 2, 
    "key": "loginRapperChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_log_in_with_mc_safesearchs_original_user_credentials", 
    "mitigationUrl": null, 
    "name": "Login MC SafeSearch"
  }, 
  {
    "category": "Security Misconfiguration", 
    "description": "Log in with the support team's original user credentials without applying SQL Injection or any other bypass.", 
    "hint": "The underlying flaw of this challenge is a lot more human error than technical weakness.", 
    "tags": [
      "Brute Force", 
      "Code Analysis"
    ], 
    "difficulty": 6, 
    "key": "loginSupportChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-misconfiguration.html#_log_in_with_the_support_teams_original_user_credentials", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html", 
    "name": "Login Support Team"
  }, 
  {
    "category": "Broken Access Control", 
    "name": "Manipulate Basket", 
    "hint": "Have an eye on the HTTP traffic while placing products in the shopping basket. Changing the quantity of products already in the basket doesn't count.", 
    "difficulty": 3, 
    "key": "basketManipulateChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_put_an_additional_product_into_another_users_shopping_basket", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html", 
    "description": "Put an additional product into another user's shopping basket."
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Access a misplaced <a href=\"https://github.com/Neo23x0/sigma\">SIEM signature</a> file.", 
    "hint": "You need to trick a security mechanism into thinking that the file you want has a valid file type.", 
    "tags": [
      "Good Practice", 
      "Contraption"
    ], 
    "difficulty": 4, 
    "key": "misplacedSignatureFileChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_access_a_misplaced_siem_signature_file", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html", 
    "name": "Misplaced Signature File"
  }, 
  {
    "category": "Broken Anti Automation", 
    "name": "Multiple Likes", 
    "hint": "Punctuality is the politeness of kings.", 
    "difficulty": 6, 
    "key": "timingAttackChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-anti-automation.html#_like_any_review_at_least_three_times_as_the_same_user", 
    "mitigationUrl": null, 
    "description": "Like any review at least three times as the same user."
  }, 
  {
    "category": "Cryptographic Issues", 
    "description": "Apply some advanced cryptanalysis to find <i>the real</i> easter egg.", 
    "hint": "You might have to peel through several layers of tough-as-nails encryption for this challenge.", 
    "tags": [
      "Shenanigans", 
      "Good for Demos"
    ], 
    "difficulty": 4, 
    "key": "easterEggLevelTwoChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/cryptographic-issues.html#_apply_some_advanced_cryptanalysis_to_find_the_real_easter_egg", 
    "mitigationUrl": null, 
    "name": "Nested Easter Egg"
  }, 
  {
    "category": "Injection", 
    "description": "Let the server sleep for some time. (It has done more than enough hard work for you)", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "This challenge is essentially a stripped-down Denial of Service (DoS) attack.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 4, 
    "key": "noSqlCommandChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_let_the_server_sleep_for_some_time", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Denial_of_Service_Cheat_Sheet.html", 
    "name": "NoSQL DoS"
  }, 
  {
    "category": "Injection", 
    "description": "All your orders are belong to us! Even the ones which don't.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "Take a close look on how the $where query operator works in MongoDB.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 5, 
    "key": "noSqlOrdersChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_all_your_orders_are_belong_to_us", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html", 
    "name": "NoSQL Exfiltration"
  }, 
  {
    "category": "Injection", 
    "name": "NoSQL Manipulation", 
    "hint": "Take a close look on how the equivalent of UPDATE-statements in MongoDB work.", 
    "difficulty": 4, 
    "key": "noSqlReviewsChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_update_multiple_product_reviews_at_the_same_time", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Injection_Prevention_Cheat_Sheet.html", 
    "description": "Update multiple product reviews at the same time."
  }, 
  {
    "category": "Unvalidated Redirects", 
    "description": "Let us redirect you to one of our crypto currency addresses which are not promoted any longer.", 
    "hint": "We might have failed to take this out of our code properly.", 
    "tags": [
      "Code Analysis"
    ], 
    "difficulty": 1, 
    "key": "redirectCryptoCurrencyChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/unvalidated-redirects.html#_let_us_redirect_you_to_one_of_our_crypto_currency_addresses", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html", 
    "name": "Outdated Allowlist"
  }, 
  {
    "category": "Broken Authentication", 
    "description": "Log in with the administrator's user credentials without previously changing them or applying SQL Injection.", 
    "hint": "This one should be equally easy to a) brute force, b) crack the password hash or c) simply guess.", 
    "tags": [
      "Brute Force", 
      "Tutorial"
    ], 
    "difficulty": 2, 
    "key": "weakPasswordChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_log_in_with_the_administrators_user_credentials_without_previously_changing_them_or_applying_sql_injection", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html", 
    "tutorial": {
      "order": 9
    }, 
    "name": "Password Strength"
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Payback Time", 
    "hint": "You literally need to make the shop owe you any amount of money.", 
    "difficulty": 3, 
    "key": "negativeOrderChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_place_an_order_that_makes_you_rich", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html", 
    "description": "Place an order that makes you rich."
  }, 
  {
    "category": "Cryptographic Issues", 
    "description": "<i class=\"far fa-gem\"></i><i class=\"far fa-gem\"></i><i class=\"far fa-gem\"></i><i class=\"far fa-gem\"></i><i class=\"far fa-gem\"></i><!--IvLuRfBJYlmStf9XfL6ckJFngyd9LfV1JaaN/KRTPQPidTuJ7FR+D/nkWJUF+0xUF07CeCeqYfxq+OJVVa0gNbqgYkUNvn//UbE7e95C+6e+7GtdpqJ8mqm4WcPvUGIUxmGLTTAC2+G9UuFCD1DUjg==--> <a href=\"https://blockchain.info/address/1AbKfgvw9psQ41NbLi8kufDQTezwG8DRZm\" target=\"_blank\"><i class=\"fab fa-btc fa-sm\"></i> Unlock Premium Challenge</a> to access exclusive content.", 
    "hint": "You do not have to pay anything to unlock this challenge! Nonetheless, donations are very much appreciated.", 
    "tags": [
      "Shenanigans"
    ], 
    "difficulty": 6, 
    "key": "premiumPaywallChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/cryptographic-issues.html#_unlock_premium_challenge_to_access_exclusive_content", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Key_Management_Cheat_Sheet.html", 
    "name": "Premium Paywall"
  }, 
  {
    "category": "Miscellaneous", 
    "description": "Read our privacy policy.", 
    "hint": "We won't even ask you to confirm that you did. Just read it. Please. Pretty please.", 
    "tags": [
      "Good Practice", 
      "Tutorial", 
      "Good for Demos"
    ], 
    "difficulty": 1, 
    "key": "privacyPolicyChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/miscellaneous.html#_read_our_privacy_policy", 
    "mitigationUrl": null, 
    "tutorial": {
      "order": 4
    }, 
    "name": "Privacy Policy"
  }, 
  {
    "category": "Security through Obscurity", 
    "description": "Prove that you actually read our privacy policy.", 
    "hint": "Only by visiting a special URL you can confirm that you read it carefully.", 
    "tags": [
      "Shenanigans", 
      "Good for Demos"
    ], 
    "difficulty": 3, 
    "key": "privacyPolicyProofChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-through-obscurity.html#_prove_that_you_actually_read_our_privacy_policy", 
    "mitigationUrl": null, 
    "name": "Privacy Policy Inspection"
  }, 
  {
    "category": "Broken Access Control", 
    "name": "Product Tampering", 
    "hint": "Look for one of the following: a) broken admin functionality, b) holes in RESTful API or c) possibility for SQL Injection.", 
    "difficulty": 3, 
    "key": "changeProductChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_change_the_href_of_the_link_within_the_o_saft_product_description", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html", 
    "description": "Change the <code>href</code> of the link within the <a href=\"/#/search?q=OWASP SSL Advanced Forensic Tool (O-Saft)\">OWASP SSL Advanced Forensic Tool (O-Saft)</a> product description into <i>https://owasp.slack.com</i>."
  }, 
  {
    "category": "XSS", 
    "description": "Perform a <i>reflected</i> XSS attack with <code>&lt;iframe src=\"javascript:alert(`xss`)\"&gt;</code>.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "Look for a url parameter where its value appears in the page it is leading to.", 
    "tags": [
      "Tutorial", 
      "Danger Zone", 
      "Good for Demos"
    ], 
    "difficulty": 2, 
    "key": "reflectedXssChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_perform_a_reflected_xss_attack", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "tutorial": {
      "order": 5
    }, 
    "name": "Reflected XSS"
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Repetitive Registration", 
    "hint": "You can solve this by cleverly interacting with the UI or bypassing it altogether.", 
    "difficulty": 1, 
    "key": "passwordRepeatChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_follow_the_dry_principle_while_registering_a_user", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html", 
    "description": "Follow the DRY principle while registering a user."
  }, 
  {
    "category": "Broken Authentication", 
    "description": "Reset Bender's password via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism with <i>the original answer</i> to his security question.", 
    "hint": "Not as trivial as Jim's but still not too difficult with some \"Futurama\" background knowledge.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 4, 
    "key": "resetPasswordBenderChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_reset_benders_password_via_the_forgot_password_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Reset Bender's Password"
  }, 
  {
    "category": "Broken Authentication", 
    "description": "Reset the password of Bjoern's internal account via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism with <i>the original answer</i> to his security question.", 
    "hint": "Nothing a little bit of Facebook stalking couldn't reveal. Might involve a historical twist.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 5, 
    "key": "resetPasswordBjoernChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_reset_the_password_of_bjoerns_internal_account_via_the_forgot_password_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Reset Bjoern's Password"
  }, 
  {
    "category": "Broken Authentication", 
    "description": "Reset Jim's password via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism with <i>the original answer</i> to his security question.", 
    "hint": "It's hard for celebrities to pick a security question from a hard-coded list where the answer is not publicly exposed.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 3, 
    "key": "resetPasswordJimChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_reset_jims_password_via_the_forgot_password_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Reset Jim's Password"
  }, 
  {
    "category": "Broken Anti Automation", 
    "description": "Reset Morty's password via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism with <i>his obfuscated answer</i> to his security question.", 
    "hint": "Find a way to bypass the rate limiting and brute force the obfuscated answer to Morty's security question.", 
    "tags": [
      "OSINT", 
      "Brute Force"
    ], 
    "difficulty": 5, 
    "key": "resetPasswordMortyChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-anti-automation.html#_reset_mortys_password_via_the_forgot_password_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html", 
    "name": "Reset Morty's Password"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "name": "Retrieve Blueprint", 
    "hint": "The product you might want to give a closer look is the OWASP Juice Shop Logo (3D-printed).", 
    "difficulty": 5, 
    "key": "retrieveBlueprintChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_deprive_the_shop_of_earnings_by_downloading_the_blueprint_for_one_of_its_products", 
    "mitigationUrl": null, 
    "description": "Deprive the shop of earnings by downloading the blueprint for one of its products."
  }, 
  {
    "category": "Broken Access Control", 
    "description": "Request a hidden resource on server through server.", 
    "hint": "Reverse engineering something bad can make good things happen.", 
    "tags": [
      "Code Analysis"
    ], 
    "difficulty": 6, 
    "key": "ssrfChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_request_a_hidden_resource_on_server_through_server", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html", 
    "name": "SSRF"
  }, 
  {
    "category": "Injection", 
    "description": "Infect the server with juicy malware by abusing arbitrary command execution.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "\"SSTi\" is a clear indicator that this has nothing to do with anything Angular. Also, make sure to use only our non-malicious malware.", 
    "tags": [
      "Contraption", 
      "Danger Zone", 
      "Code Analysis"
    ], 
    "difficulty": 6, 
    "key": "sstiChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_infect_the_server_with_juicy_malware_by_abusing_arbitrary_command_execution", 
    "mitigationUrl": null, 
    "name": "SSTi"
  }, 
  {
    "category": "Miscellaneous", 
    "description": "Find the carefully hidden 'Score Board' page.", 
    "hint": "Try to find a reference or clue behind the scenes. Or simply guess what URL the Score Board might have.", 
    "tags": [
      "Tutorial", 
      "Code Analysis"
    ], 
    "difficulty": 1, 
    "key": "scoreBoardChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/score-board.html#_find_the_carefully_hidden_score_board_page", 
    "mitigationUrl": null, 
    "tutorial": {
      "order": 1
    }, 
    "name": "Score Board"
  }, 
  {
    "category": "Miscellaneous", 
    "description": "Behave like any \"white-hat\" should before getting into the action.", 
    "hint": "Undoubtedly you want to read our security policy before conducting any research on our application.", 
    "tags": [
      "Good Practice"
    ], 
    "difficulty": 2, 
    "key": "securityPolicyChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/miscellaneous.html#_behave_like_any_white_hat_should_before_getting_into_the_action", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerability_Disclosure_Cheat_Sheet.html", 
    "name": "Security Policy"
  }, 
  {
    "category": "XSS", 
    "description": "Perform a <i>persisted</i> XSS attack with <code>&lt;iframe src=\"javascript:alert(`xss`)\"&gt;</code> bypassing a <i>server-side</i> security mechanism.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "The \"Comment\" field in the \"Customer Feedback\" screen is where you want to put your focus on.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 4, 
    "key": "persistedXssFeedbackChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_perform_a_persisted_xss_attack_bypassing_a_server_side_security_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "name": "Server-side XSS Protection"
  }, 
  {
    "category": "Security through Obscurity", 
    "description": "<a href=\"/#/contact\">Rat out</a> a notorious character hiding in plain sight in the shop. (Mention the exact name of the character)", 
    "hint": "No matter how good your eyes are, you will need tool assistance for this challenge.", 
    "tags": [
      "Shenanigans"
    ], 
    "difficulty": 4, 
    "key": "hiddenImageChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-through-obscurity.html#_rat_out_a_notorious_character_hiding_in_plain_sight_in_the_shop", 
    "mitigationUrl": null, 
    "name": "Steganography"
  }, 
  {
    "category": "Insecure Deserialization", 
    "description": "Perform a Remote Code Execution that occupies the server for a while without using infinite loops.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "Your attack payload must not trigger the protection against too many iterations.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 6, 
    "key": "rceOccupyChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/insecure-deserialization.html#_perform_a_remote_code_execution_that_occupies_the_server_for_a_while_without_using_infinite_loops", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Denial_of_Service_Cheat_Sheet.html", 
    "name": "Successful RCE DoS"
  }, 
  {
    "category": "Vulnerable Components", 
    "description": "<a href=\"/#/contact\">Inform the development team</a> about a danger to some of <em>their</em> credentials. (Send them the URL of the <em>original report</em> or an assigned CVE or another identifier of this vulnerability)", 
    "hint": "This vulnerability will not affect any customer of the shop. It is aimed exclusively at its developers.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 5, 
    "key": "supplyChainAttackChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_inform_the_development_team_about_a_danger_to_some_of_their_credentials", 
    "mitigationUrl": null, 
    "name": "Supply Chain Attack"
  }, 
  {
    "category": "Broken Authentication", 
    "name": "Two Factor Authentication", 
    "hint": "The 2FA implementation requires to store a secret for every user. You will need to find a way to access this secret in order to solve this challenge.", 
    "difficulty": 5, 
    "key": "twoFactorAuthUnsafeSecretStorageChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-authentication.html#_solve_the_2fa_challenge_for_user_wurstbrot", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Multifactor_Authentication_Cheat_Sheet.html", 
    "description": "Solve the 2FA challenge for user \"wurstbrot\". (Disabling, bypassing or overwriting his 2FA settings does not count as a solution)"
  }, 
  {
    "category": "Vulnerable Components", 
    "name": "Unsigned JWT", 
    "hint": "This challenge exploits a weird option that is supported when signing tokens with JWT.", 
    "difficulty": 5, 
    "key": "jwtUnsignedChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_forge_an_essentially_unsigned_jwt_token", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_for_Java_Cheat_Sheet.html", 
    "description": "Forge an essentially unsigned JWT token that impersonates the (non-existing) user <i>jwtn3d@juice-sh.op</i>."
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Upload Size", 
    "hint": "You can attach a small file to the \"Complaint\" form. Investigate how this upload actually works.", 
    "difficulty": 3, 
    "key": "uploadSizeChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_upload_a_file_larger_than_100_kb", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html", 
    "description": "Upload a file larger than 100 kB."
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Upload Type", 
    "hint": "You can attach a PDF or ZIP file to the \"Complaint\" form. Investigate how this upload actually works.", 
    "difficulty": 3, 
    "key": "uploadTypeChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_upload_a_file_that_has_no_pdf_or_zip_extension", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/File_Upload_Cheat_Sheet.html", 
    "description": "Upload a file that has no .pdf or .zip extension."
  }, 
  {
    "category": "Injection", 
    "name": "User Credentials", 
    "hint": "Gather information on where user data is stored and how it is addressed. Then craft a corresponding UNION SELECT attack.", 
    "difficulty": 4, 
    "key": "unionSqlInjectionChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/injection.html#_retrieve_a_list_of_all_user_credentials_via_sql_injection", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html", 
    "description": "Retrieve a list of all user credentials via SQL Injection."
  }, 
  {
    "category": "XSS", 
    "description": "Embed an XSS payload <code>&lt;/script&gt;&lt;script&gt;alert(`xss`)&lt;/script&gt;</code> into our promo video.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "You have to reuse the vulnerability behind one other 6-star challenge to be able to solve this one.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 6, 
    "key": "videoXssChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_embed_an_xss_payload_into_our_promo_video", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html", 
    "name": "Video XSS"
  }, 
  {
    "category": "Broken Access Control", 
    "description": "View another user's shopping basket.", 
    "hint": "Have an eye on the HTTP traffic while shopping. Alternatively try to find a client-side association of users to their basket.", 
    "tags": [
      "Tutorial", 
      "Good for Demos"
    ], 
    "difficulty": 2, 
    "key": "basketAccessChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_view_another_users_shopping_basket", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Authorization_Cheat_Sheet.html", 
    "tutorial": {
      "order": 10
    }, 
    "name": "View Basket"
  }, 
  {
    "category": "Vulnerable Components", 
    "description": "<a href=\"/#/contact\">Inform the shop</a> about a vulnerable library it is using. (Mention the exact library name and version in your comment)", 
    "hint": "Report one of two possible answers via the \"Customer Feedback\" form. Do not forget to submit the library's version as well.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 4, 
    "key": "knownVulnerableComponentChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_inform_the_shop_about_a_vulnerable_library_it_is_using", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerability_Disclosure_Cheat_Sheet.html", 
    "name": "Vulnerable Library"
  }, 
  {
    "category": "Cryptographic Issues", 
    "name": "Weird Crypto", 
    "hint": "Report one of four possible answers via the \"Customer Feedback\" form.", 
    "difficulty": 2, 
    "key": "weirdCryptoChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/cryptographic-issues.html#_inform_the_shop_about_an_algorithm_or_library_it_should_definitely_not_use_the_way_it_does", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerability_Disclosure_Cheat_Sheet.html", 
    "description": "<a href=\"/#/contact\">Inform the shop</a> about an algorithm or library it should definitely not use the way it does."
  }, 
  {
    "category": "Unvalidated Redirects", 
    "description": "Enforce a redirect to a page you are not supposed to redirect to.", 
    "hint": "You have to find a way to beat the allowlist of allowed redirect URLs.", 
    "tags": [
      "Prerequisite"
    ], 
    "difficulty": 4, 
    "key": "redirectChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/unvalidated-redirects.html#_enforce_a_redirect_to_a_page_you_are_not_supposed_to_redirect_to", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html", 
    "name": "Allowlist Bypass"
  }, 
  {
    "category": "XXE", 
    "description": "Retrieve the content of <code>C:\\Windows\\system.ini</code> or <code>/etc/passwd</code> from the server.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "The leverage point for this challenge is the deprecated B2B interface.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 3, 
    "key": "xxeFileDisclosureChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xxe.html#_retrieve_the_content_of_cwindowssystemini_or_etcpasswd_from_the_server", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html", 
    "name": "XXE Data Access"
  }, 
  {
    "category": "XXE", 
    "description": "Give the server something to chew on for quite a while.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "It is not as easy as sending a large amount of data directly to the deprecated B2B interface.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 5, 
    "key": "xxeDosChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xxe.html#_give_the_server_something_to_chew_on_for_quite_a_while", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/XML_External_Entity_Prevention_Cheat_Sheet.html", 
    "name": "XXE DoS"
  }, 
  {
    "category": "Insecure Deserialization", 
    "description": "Drop some explosive data into a vulnerable file-handling endpoint.", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "This one is actually similar to the XXE DoS challenge in every way except the data format being (ab)used.", 
    "tags": [
      "Danger Zone"
    ], 
    "difficulty": 5, 
    "key": "yamlBombChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/insecure-deserialization.html#_drop_some_explosive_data_into_a_vulnerable_file_handling_endpoint", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Denial_of_Service_Cheat_Sheet.html", 
    "name": "Memory Bomb"
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Zero Stars", 
    "hint": "Before you invest time bypassing the API, you might want to play around with the UI a bit.", 
    "difficulty": 1, 
    "key": "zeroStarsChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_give_a_devastating_zero_star_feedback_to_the_store", 
    "mitigationUrl": null, 
    "description": "Give a devastating zero-star feedback to the store."
  }, 
  {
    "category": "Improper Input Validation", 
    "description": "Retrieve the photo of Bjoern's cat in \"melee combat-mode\".", 
    "hint": "Check the Photo Wall for an image that could not be loaded correctly.", 
    "tags": [
      "Shenanigans"
    ], 
    "difficulty": 1, 
    "key": "missingEncodingChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_retrieve_the_photo_of_bjoerns_cat_in_melee_combat_mode", 
    "mitigationUrl": null, 
    "name": "Missing Encoding"
  }, 
  {
    "category": "Security Misconfiguration", 
    "description": "Stick <a href=\"http://placecats.com/\" target=\"_blank\">cute cross-domain kittens</a> all over our delivery boxes.", 
    "hint": "This challenge would formally have to be in several categories as the developers made multiple gaffes for this to be possible.", 
    "tags": [
      "Contraption"
    ], 
    "difficulty": 5, 
    "key": "svgInjectionChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/security-misconfiguration.html#_stick_cute_cross_domain_kittens_all_over_our_delivery_boxes", 
    "mitigationUrl": null, 
    "name": "Cross-Site Imaging"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Find the endpoint that serves usage data to be scraped by a <a href=\"https://github.com/prometheus/prometheus\">popular monitoring system</a>.", 
    "hint": "Try to guess what URL the endpoint might have.", 
    "tags": [
      "Good Practice"
    ], 
    "difficulty": 1, 
    "key": "exposedMetricsChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_find_the_endpoint_that_serves_usage_data_to_be_scraped_by_a_popular_monitoring_system", 
    "mitigationUrl": null, 
    "name": "Exposed Metrics"
  }, 
  {
    "category": "Improper Input Validation", 
    "name": "Deluxe Fraud", 
    "hint": "Look closely at what happens when you attempt to upgrade your account.", 
    "difficulty": 3, 
    "key": "freeDeluxeChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_obtain_a_deluxe_membership_without_paying_for_it", 
    "mitigationUrl": null, 
    "description": "Obtain a Deluxe Membership without paying for it."
  }, 
  {
    "category": "Broken Access Control", 
    "name": "CSRF", 
    "hint": "Find a form which updates the username and then construct a malicious page in the online HTML editor. You probably need an older browser version for this.", 
    "difficulty": 3, 
    "key": "csrfChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/broken-access-control.html#_change_the_name_of_a_user_by_performing_cross_site_request_forgery_from_another_origin", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html", 
    "description": "Change the name of a user by performing Cross-Site Request Forgery from <a href=\"http://htmledit.squarefree.com\">another origin</a>."
  }, 
  {
    "category": "XSS", 
    "description": "Use the bonus payload <code>&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; allow=&quot;autoplay&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/771984076&amp;color=%23ff5500&amp;auto_play=true&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&quot;&gt;&lt;/iframe&gt;</code> in the <i>DOM XSS</i> challenge.", 
    "hint": "Copy + Paste = Solved!", 
    "tags": [
      "Shenanigans", 
      "Tutorial"
    ], 
    "difficulty": 1, 
    "key": "xssBonusChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/xss.html#_use_the_bonus_payload_in_the_dom_xss_challenge", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/DOM_based_XSS_Prevention_Cheat_Sheet.html", 
    "tutorial": {
      "order": 3
    }, 
    "name": "Bonus Payload"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Reset Uvogin's password via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism with <i>the original answer</i> to his security question.", 
    "hint": "You might have to do some OSINT on his social media personas to find out his honest answer to the security question.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 4, 
    "key": "resetPasswordUvoginChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_reset_uvogins_password_via_the_forgot_password_mechanism", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Reset Uvogin's Password"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Determine the answer to John's security question by looking at an upload of him to the Photo Wall and use it to reset his password via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism.", 
    "hint": "Take a look at the meta data of the corresponding photo.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 2, 
    "key": "geoStalkingMetaChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_determine_the_answer_to_johns_security_question", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Meta Geo Stalking"
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "description": "Determine the answer to Emma's security question by looking at an upload of her to the Photo Wall and use it to reset her password via the <a href=\"/#/forgot-password\">Forgot Password</a> mechanism.", 
    "hint": "Take a look at the details in the photo to determine the location of where it was taken.", 
    "tags": [
      "OSINT"
    ], 
    "difficulty": 2, 
    "key": "geoStalkingVisualChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/sensitive-data-exposure.html#_determine_the_answer_to_emmas_security_question", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Choosing_and_Using_Security_Questions_Cheat_Sheet.html", 
    "name": "Visual Geo Stalking"
  }, 
  {
    "category": "Vulnerable Components", 
    "description": "Permanently disable the support chatbot so that it can no longer answer customer queries.", 
    "hint": "Think of a way to get a hold of the internal workings on the chatbot API.", 
    "tags": [
      "Code Analysis"
    ], 
    "difficulty": 5, 
    "key": "killChatbotChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_permanently_disable_the_support_chatbot", 
    "mitigationUrl": "https://cheatsheetseries.owasp.org/cheatsheets/Vulnerable_Dependency_Management_Cheat_Sheet.html", 
    "name": "Kill Chatbot"
  }, 
  {
    "category": "Improper Input Validation", 
    "description": "Bypass a security control with a <a href=\"https://hakipedia.com/index.php/Poison_Null_Byte\">Poison Null Byte</a> to access a file not meant for your eyes.", 
    "hint": "Take a look at the details in the photo to determine the location of where it was taken.", 
    "tags": [
      "Prerequisite"
    ], 
    "difficulty": 4, 
    "key": "nullByteChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/improper-input-validation.html#_bypass_a_security_control_with_a_poison_null_byte", 
    "mitigationUrl": null, 
    "name": "Poison Null Byte"
  }, 
  {
    "category": "Miscellaneous", 
    "description": "Receive a coupon code from the support chatbot.", 
    "hint": "Just keep asking.", 
    "tags": [
      "Shenanigans", 
      "Brute Force"
    ], 
    "difficulty": 1, 
    "key": "bullyChatbotChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/miscellaneous.html#_receive_a_coupon_code_from_the_support_chatbot", 
    "mitigationUrl": null, 
    "name": "Bully Chatbot"
  }, 
  {
    "category": "Vulnerable Components", 
    "name": "Local File Read", 
    "disabledEnv": [
      "Docker", 
      "Heroku", 
      "Gitpod"
    ], 
    "hint": "You should read up on vulnerabilities in popular NodeJs template engines.", 
    "tags": [
      "OSINT", 
      "Danger Zone"
    ], 
    "difficulty": 5, 
    "key": "lfrChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/vulnerable-components.html#_gain_read_access_to_an_arbitrary_local_file_on_the_web_server", 
    "description": "Gain read access to an arbitrary local file on the web server."
  }, 
  {
    "category": "Miscellaneous", 
    "name": "Mass Dispel", 
    "hint": "Either check the official documentation or inspect a notification UI element directly.", 
    "difficulty": 1, 
    "key": "closeNotificationsChallenge", 
    "hintUrl": "https://pwning.owasp-juice.shop/companion-guide/latest/part2/miscellaneous.html#_close_multiple_challenge_solved_notifications_in_one_go", 
    "mitigationUrl": null, 
    "description": "Close multiple \"Challenge solved\"-notifications in one go."
  }, 
  {
    "category": "Miscellaneous", 
    "name": "Security Advisory", 
    "hint": "Security Advisories are often listed in the security.txt", 
    "difficulty": 3, 
    "key": "csafChallenge", 
    "hintUrl": "", 
    "mitigationUrl": null, 
    "description": " The Juice Shop is susceptible to a known vulnerability in a library, for which an advisory has already been issued, marking the Juice Shop as <i>known affected</i>. A fix is still pending. <a href=\"/#/contact\">Inform the shop</a> about a suitable checksum as proof that you did your due diligence."
  }, 
  {
    "category": "Sensitive Data Exposure", 
    "name": "Exposed credentials", 
    "hint": "Have a look at the client-side code in the dev console.", 
    "difficulty": 2, 
    "key": "exposedCredentialsChallenge", 
    "hintUrl": "", 
    "mitigationUrl": null, 
    "tutorial": {
      "order": 6
    }, 
    "description": "A developer was careless with hardcoding unused, but still valid credentials for a testing account on the client-side."
  }
]